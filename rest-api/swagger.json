{
  "swagger": "2.0",
  "info": {
    "title": "giri-rest-api",
    "description": "This is the specification of the giri garden irrigator REST API endpoints.",
    "version": "1.0",
    "contact": {
      "name": "giri-rest-api",
      "url": "http://localhost",
      "email": "tombenke@gmail.com"
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "host": "localhost",
  "basePath": "/",
  "tags": [
    {
      "name": "systems",
      "description": "Manage the garden irrigatior systems"
    },
    {
      "name": "clusters",
      "description": "Manage the sector-clusters of the garden irrigator system"
    },
    {
      "name": "sectors",
      "description": "Manage the sectors of the garden irrigator system"
    },
    {
      "name": "rtc",
      "description": "Manage the Real-Time Clock component of the system"
    },
    {
      "name": "swagger",
      "description": "Static JSON format swagger file. Contains the specification of all endpoints provided by the giri system."
    }
  ],
  "securityDefinitions": {
    "ClientToken": {
      "description": "The frontend uses ApiKey to access to these endpoints",
      "type": "apiKey",
      "name": "token",
      "in": "query"
    }
  },
  "security": [
    {
      "ClientToken": []
    }
  ],
  "paths": {
    "/rtc": {
      "get": {
        "tags": [
          "rtc"
        ],
        "summary": "Get the actual time",
        "description": "Get the actual time known by the RTC of the system",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/paths/~1rtc/put/responses/200/schema"
            },
            "examples": {
              "application/json": {
                "time": 1474983731
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "rtc"
        ],
        "summary": "Set the actual time",
        "description": "Set the actual time in the system RTC",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "rtc",
            "description": "The put rtc parameters",
            "required": true,
            "schema": {
              "title": "rtc body",
              "description": "The actual time to set",
              "example": {
                "time": 1474983731
              },
              "type": "object",
              "properties": {
                "time": {
                  "type": "number",
                  "description": "The time-stamp value to set"
                }
              },
              "required": [
                "time"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "rtc body",
              "description": "The time set",
              "type": "object",
              "properties": {
                "time": {
                  "type": "number",
                  "description": "The actual time-stamp value"
                }
              },
              "required": [
                "time"
              ]
            },
            "examples": {
              "application/json": {
                "time": 1474983731
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameters",
            "schema": {
              "title": "Response schema for Error 400",
              "description": "The content of the error response in case of wrong or missing parameters",
              "example": {
                "error": "Wrong or missing request parameters"
              },
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "description": "The details about the error"
                }
              },
              "required": [
                "error"
              ]
            }
          }
        },
        "deprecated": false
      }
    },
    "/systems": {
      "get": {
        "tags": [
          "systems"
        ],
        "summary": "List all the Systems",
        "description": "List all the Systems",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The GET /systems response body",
              "description": "The list of systems",
              "type": "array",
              "items": {
                "type": "object",
                "description": "A system descriptor",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of the system"
                  },
                  "name": {
                    "type": "string",
                    "description": "The display name of the system"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "2a1152ee-4d77-4ff4-a811-598555937625",
                  "name": "hedgehog-garden"
                },
                {
                  "id": "2adce0f1-397f-4923-bdf2-16334a76c29f",
                  "name": "backyard"
                }
              ]
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "systems"
        ],
        "summary": "Create a new instance of System",
        "description": "Create a new instance of System",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "systems",
            "description": "The system object to create",
            "required": true,
            "schema": {
              "title": "The POST /systems request body",
              "example": {
                "name": "hedgehog-garden"
              },
              "description": "The description of the system to be created",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The display name of the system"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The POST /systems response body",
              "type": "object",
              "description": "The newly created system descriptor",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the system, generated by the service."
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the system."
                }
              },
              "required": [
                "id",
                "name"
              ]
            },
            "examples": {
              "application/json": {
                "id": "2a1152ee-4d77-4ff4-a811-598555937625",
                "name": "hedgehog-garden"
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameters",
            "schema": {
              "$ref": "#/paths/~1rtc/put/responses/400/schema"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "systems"
        ],
        "summary": "Deletes all the Systems",
        "description": "Deletes all the Systems",
        "produces": [
          "application/json"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "deprecated": false
      }
    },
    "/systems/{systemId}": {
      "get": {
        "tags": [
          "systems"
        ],
        "summary": "Get one System",
        "description": "Get one System",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "systemId",
            "description": "The unique ID of the system to retrieve",
            "type": "string",
            "required": true,
            "x-example": "2a1152ee-4d77-4ff4-a811-598555937625"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/paths/~1systems~1%7BsystemId%7D/put/responses/200/schema"
            },
            "examples": {
              "application/json": {
                "id": "2a1152ee-4d77-4ff4-a811-598555937625",
                "name": "hedgehog-garden"
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "systems"
        ],
        "summary": "Update a System",
        "description": "Update a System",
        "operationId": "system.put",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "systemId",
            "description": "The unique ID of the system to update",
            "type": "string",
            "required": true,
            "x-example": "2a1152ee-4d77-4ff4-a811-598555937625"
          },
          {
            "in": "body",
            "name": "system",
            "description": "The system parameters",
            "required": true,
            "schema": {
              "title": "The system request body",
              "description": "The description of the system selected by its ID",
              "example": {
                "id": "2a1152ee-4d77-4ff4-a811-598555937625",
                "name": "hedgehog-garden"
              },
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the system"
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the system"
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The system body",
              "description": "The descriptor of the selected system",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the system"
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the system"
                }
              },
              "required": [
                "id",
                "name"
              ]
            },
            "examples": {
              "application/json": {
                "id": "2a1152ee-4d77-4ff4-a811-598555937625",
                "name": "hedgehog-garden"
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameters",
            "schema": {
              "$ref": "#/paths/~1rtc/put/responses/400/schema"
            }
          }
        },
        "deprecated": false
      }
    },
    "/systems/{systemId}/clusters": {
      "get": {
        "tags": [
          "systems"
        ],
        "summary": "List all the Clusters that belongs to a specific system",
        "description": "List all the Clusters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "systemId",
            "description": "The unique ID of the system that contains the clusters",
            "type": "string",
            "required": true,
            "x-example": "2a1152ee-4d77-4ff4-a811-598555937625"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The GET /systems/clusters response body",
              "description": "The list of clusters of the system",
              "type": "array",
              "items": {
                "type": "object",
                "description": "A cluster",
                "properties": {
                  "clusterId": {
                    "type": "string",
                    "description": "The unique ID of the cluster"
                  },
                  "systemId": {
                    "type": "string",
                    "description": "The unique Id of the system the cluster belongs to"
                  },
                  "name": {
                    "type": "string",
                    "description": "The display name of the cluster"
                  }
                },
                "required": [
                  "clusterId",
                  "systemId",
                  "name"
                ]
              }
            },
            "examples": {
              "application/json": [
                {
                  "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                  "systemId": "2a1152ee-4d77-4ff4-a811-598555937625",
                  "name": "open-air"
                },
                {
                  "clusterId": "d64d2325-c7b0-4bc7-9178-8ec76ac7355c",
                  "systemId": "2a1152ee-4d77-4ff4-a811-598555937625",
                  "name": "politunnel"
                }
              ]
            }
          }
        },
        "deprecated": false
      }
    },
    "/systems/{systemId}/reset": {
      "post": {
        "tags": [
          "systems"
        ],
        "summary": "The System Reset operation",
        "description": "Execute the System Reset operation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "systemId",
            "description": "The unique ID of the system to reset",
            "type": "string",
            "required": true,
            "x-example": "2a1152ee-4d77-4ff4-a811-598555937625"
          },
          {
            "in": "body",
            "name": "system",
            "description": "The system parameters",
            "required": true,
            "schema": {
              "title": "The POST /systems/{systemId}/reset request body",
              "description": "System reset request",
              "example": {},
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The POST /systems/{systemId}/reset response body",
              "description": "System reset response",
              "type": "object"
            },
            "examples": {
              "application/json": {}
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters": {
      "get": {
        "tags": [
          "clusters"
        ],
        "summary": "List all the Clusters",
        "description": "List all the Clusters",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The GET /clusters response body",
              "description": "The list of all clusters",
              "type": "array",
              "items": {
                "type": "object",
                "description": "One cluster descriptor",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of the cluster"
                  },
                  "systemId": {
                    "type": "string",
                    "description": "The unique ID of the system the cluster belongs to"
                  },
                  "name": {
                    "type": "string",
                    "description": "The display name of the cluster"
                  }
                },
                "required": [
                  "id",
                  "systemId",
                  "name"
                ]
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "79e914da-5103-4651-abb1-70214d2270a7",
                  "systemId": "2a1152ee-4d77-4ff4-a811-598555937625",
                  "name": "open-air"
                },
                {
                  "id": "d64d2325-c7b0-4bc7-9178-8ec76ac7355c",
                  "systemId": "2a1152ee-4d77-4ff4-a811-598555937625",
                  "name": "politunnel"
                }
              ]
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "clusters"
        ],
        "summary": "Create a new instance of Clusters",
        "description": "Create a new instance of Clusters",
        "operationId": "clusters.post",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clusters",
            "description": "The cluster object to create",
            "required": true,
            "schema": {
              "title": "The POST /clusters request body",
              "description": "The details of the cluster to be created",
              "example": {
                "systemId": "2a1152ee-4d77-4ff4-a811-598555937625",
                "name": "open-air"
              },
              "type": "object",
              "properties": {
                "systemId": {
                  "type": "string",
                  "description": "The unique ID of the system the newly created cluster will be added"
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the new cluster"
                }
              },
              "required": [
                "systemId",
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The POST /clusters response body",
              "description": "The response object of the cluster creation operation",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the newly created cluster, assigned by the giri system."
                },
                "systemId": {
                  "type": "string",
                  "description": "The unique ID of the system the new cluster belongs to"
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the cluster"
                }
              },
              "required": [
                "id",
                "systemId",
                "name"
              ]
            },
            "examples": {
              "application/json": {
                "id": "79e914da-5103-4651-abb1-70214d2270a7",
                "systemId": "2a1152ee-4d77-4ff4-a811-598555937625",
                "name": "open-air"
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameters",
            "schema": {
              "$ref": "#/paths/~1rtc/put/responses/400/schema"
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{clusterId}": {
      "get": {
        "tags": [
          "clusters"
        ],
        "summary": "Get one Cluster",
        "description": "Get one Cluster",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "description": "The unique ID of the cluster to retrieve",
            "type": "string",
            "required": true,
            "x-example": "2a1152ee-4d77-4ff4-a811-598555937625"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The GET /clusters/{clusterId} response body",
              "description": "The cluster descriptor object",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the cluster"
                },
                "systemId": {
                  "type": "string",
                  "description": "The unique ID of the system this cluster belongs to"
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the cluster"
                }
              },
              "required": [
                "id",
                "systemId",
                "name"
              ]
            },
            "examples": {
              "application/json": {
                "id": "79e914da-5103-4651-abb1-70214d2270a7",
                "systemId": "2a1152ee-4d77-4ff4-a811-598555937625",
                "name": "open-air"
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "clusters"
        ],
        "summary": "Update a Cluster",
        "description": "Update a Cluster",
        "operationId": "cluster.put",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "description": "The unique ID of the cluster to update",
            "type": "string",
            "required": true,
            "x-example": "2a1152ee-4d77-4ff4-a811-598555937625"
          },
          {
            "in": "body",
            "name": "cluster",
            "description": "The cluster object to update",
            "required": true,
            "schema": {
              "title": "The PUT /clusters/{clusterId} request body",
              "description": "The cluster descriptor object to update",
              "example": {
                "id": "79e914da-5103-4651-abb1-70214d2270a7",
                "systemId": "2a1152ee-4d77-4ff4-a811-598555937625",
                "name": "open-air"
              },
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the cluster"
                },
                "systemId": {
                  "type": "string",
                  "description": "The unique ID of the system this cluster belongs to"
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the cluster"
                }
              },
              "required": [
                "id",
                "systemId",
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The PUT /clusters/{clusterId} response body",
              "description": "The updated cluster descriptor object",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the cluster"
                },
                "systemId": {
                  "type": "string",
                  "description": "The unique system ID of the system the cluster belongs to"
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the cluster"
                }
              },
              "required": [
                "id",
                "systemId",
                "name"
              ]
            },
            "examples": {
              "application/json": {
                "id": "79e914da-5103-4651-abb1-70214d2270a7",
                "systemId": "2a1152ee-4d77-4ff4-a811-598555937625",
                "name": "open-air"
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameters",
            "schema": {
              "$ref": "#/paths/~1rtc/put/responses/400/schema"
            }
          }
        },
        "deprecated": false
      }
    },
    "/clusters/{clusterId}/sectors": {
      "get": {
        "tags": [
          "clusters"
        ],
        "summary": "The list of sectors belong to a specific cluster",
        "description": "List all the sectors of the cluster",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "clusterId",
            "description": "The unique ID of the cluster to query about its sectors",
            "type": "string",
            "required": true,
            "x-example": "2a1152ee-4d77-4ff4-a811-598555937625"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "The GET /sectors response body",
              "description": "The list of sectors belong to a specific cluster",
              "type": "array",
              "items": {
                "$ref": "#/paths/~1sectors/post/responses/200/schema"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "9688588a-2507-4460-855c-72743ff7fe5f",
                  "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                  "name": "tomatoes",
                  "idx": 0,
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 5 * * *",
                    "duration": 60
                  },
                  "state": "OFF",
                  "port": {
                    "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                    "portIdx": 0
                  }
                },
                {
                  "id": "aa0eb245-eb9e-4815-88f5-891bc89ca0d8",
                  "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                  "name": "cucumbers",
                  "idx": 1,
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 6 * * *",
                    "duration": 60
                  },
                  "state": "OFF",
                  "port": {
                    "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                    "portIdx": 1
                  }
                },
                {
                  "id": "74d9ac33-c3f2-4ba7-8d7e-89ede93ed191",
                  "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                  "name": "papricas",
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 7 * * *",
                    "duration": 60
                  },
                  "state": "OFF",
                  "idx": 2,
                  "port": {
                    "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                    "portIdx": 2
                  }
                },
                {
                  "id": "576ac398-f675-4851-b246-4bf6067471dd",
                  "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                  "name": "carrots",
                  "idx": 3,
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 8 * * *",
                    "duration": 30
                  },
                  "state": "OFF",
                  "port": {
                    "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                    "portIdx": 3
                  }
                }
              ]
            }
          }
        },
        "deprecated": false
      }
    },
    "/sectors": {
      "get": {
        "tags": [
          "sectors"
        ],
        "summary": "Get the list of all sectors of all systems",
        "description": "Returns with the list of all sectors of all systems. \nIn order to retrieve the sectors of a specific cluster use the GET /clusters/{clusterId}/sectors call.\n",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "get-sectors-response.json schema Set",
              "description": "The list of all sectors of the system",
              "type": "array",
              "items": {
                "$ref": "#/paths/~1sectors/post/responses/200/schema"
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "9688588a-2507-4460-855c-72743ff7fe5f",
                  "name": "tomatoes",
                  "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                  "idx": 0,
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 5 * * *",
                    "duration": 60
                  },
                  "state": "OFF",
                  "port": {
                    "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                    "portIdx": 0
                  }
                },
                {
                  "id": "aa0eb245-eb9e-4815-88f5-891bc89ca0d8",
                  "name": "cucumbers",
                  "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                  "idx": 1,
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 6 * * *",
                    "duration": 60
                  },
                  "state": "OFF",
                  "port": {
                    "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                    "portIdx": 1
                  }
                },
                {
                  "id": "74d9ac33-c3f2-4ba7-8d7e-89ede93ed191",
                  "name": "papricas",
                  "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 7 * * *",
                    "duration": 60
                  },
                  "state": "OFF",
                  "idx": 2,
                  "port": {
                    "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                    "portIdx": 2
                  }
                },
                {
                  "id": "576ac398-f675-4851-b246-4bf6067471dd",
                  "name": "carrots",
                  "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                  "idx": 3,
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 8 * * *",
                    "duration": 30
                  },
                  "state": "OFF",
                  "port": {
                    "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                    "portIdx": 3
                  }
                },
                {
                  "id": "f63df5ca-f6b1-4c02-8f6a-f2170b8ed0a9",
                  "name": "cucumbers",
                  "clusterId": "d64d2325-c7b0-4bc7-9178-8ec76ac7355c",
                  "idx": 0,
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 8 * * *",
                    "duration": 30
                  },
                  "state": "OFF",
                  "port": {
                    "deviceId": "b02e7625-aca4-4d7c-bdf7-73cd92ebf055",
                    "portIdx": 0
                  }
                },
                {
                  "id": "1d255036-419a-4955-8c44-889a0dbe368e",
                  "name": "potatoes",
                  "clusterId": "d64d2325-c7b0-4bc7-9178-8ec76ac7355c",
                  "idx": 1,
                  "config": {
                    "mode": "AUTO",
                    "startAt": "0 8 * * *",
                    "duration": 30
                  },
                  "state": "OFF",
                  "port": {
                    "deviceId": "b02e7625-aca4-4d7c-bdf7-73cd92ebf055",
                    "portIdx": 1
                  }
                }
              ]
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "sectors"
        ],
        "summary": "Create a new instance of Sectors",
        "description": "Create a new instance of Sectors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "sectors",
            "description": "The sector object to create",
            "required": true,
            "schema": {
              "title": "Sector descriptor object",
              "description": "Describe one sector in details",
              "example": {
                "name": "tomatoes",
                "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                "idx": 0,
                "config": {
                  "mode": "AUTO",
                  "startAt": "0 5 * * *",
                  "duration": 60
                },
                "state": "OFF",
                "port": {
                  "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                  "portIdx": 0
                }
              },
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the sector"
                },
                "clusterId": {
                  "type": "string",
                  "description": "The unique ID of the sector belongs to"
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the sector"
                },
                "idx": {
                  "type": "number",
                  "description": "The index of sector in the cluster"
                },
                "config": {
                  "type": "object",
                  "description": "The sector configuration parameters",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "The working mode of the sector. One of `INACTIVE`, `MANUAL`, `AUTO`"
                    },
                    "startAt": {
                      "type": "string",
                      "description": "cron pattern string of start the active period, if `mode` is `AUTO`"
                    },
                    "duration": {
                      "type": "number",
                      "description": "The length of period in minutes, if `mode` is `AUTO`"
                    }
                  },
                  "required": [
                    "mode",
                    "startAt",
                    "duration"
                  ]
                },
                "state": {
                  "type": "string",
                  "description": "The actual state of the sector"
                },
                "port": {
                  "type": "object",
                  "description": "The port configuration parameters, the sector is using",
                  "properties": {
                    "deviceId": {
                      "type": "string",
                      "description": "The physical device id of the port device used by the sector to switch the solenoid"
                    },
                    "portIdx": {
                      "type": "number",
                      "description": "The index of the port on the physical device"
                    }
                  },
                  "required": [
                    "deviceId",
                    "portIdx"
                  ]
                }
              },
              "required": [
                "id",
                "clusterId",
                "name",
                "idx",
                "config",
                "state",
                "port"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "title": "Sector descriptor object",
              "description": "Describe one sector in details",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique ID of the sector"
                },
                "clusterId": {
                  "type": "string",
                  "description": "The unique ID of the sector belongs to"
                },
                "name": {
                  "type": "string",
                  "description": "The display name of the sector"
                },
                "idx": {
                  "type": "number",
                  "description": "The index of sector in the cluster"
                },
                "config": {
                  "type": "object",
                  "description": "The sector configuration parameters",
                  "properties": {
                    "mode": {
                      "type": "string",
                      "description": "The working mode of the sector. One of `INACTIVE`, `MANUAL`, `AUTO`"
                    },
                    "startAt": {
                      "type": "string",
                      "description": "cron pattern string of start the active period, if `mode` is `AUTO`"
                    },
                    "duration": {
                      "type": "number",
                      "description": "The length of period in minutes, if `mode` is `AUTO`"
                    }
                  },
                  "required": [
                    "mode",
                    "startAt",
                    "duration"
                  ]
                },
                "state": {
                  "type": "string",
                  "description": "The actual state of the sector"
                },
                "port": {
                  "type": "object",
                  "description": "The port configuration parameters, the sector is using",
                  "properties": {
                    "deviceId": {
                      "type": "string",
                      "description": "The physical device id of the port device used by the sector to switch the solenoid"
                    },
                    "portIdx": {
                      "type": "number",
                      "description": "The index of the port on the physical device"
                    }
                  },
                  "required": [
                    "deviceId",
                    "portIdx"
                  ]
                }
              },
              "required": [
                "id",
                "clusterId",
                "name",
                "idx",
                "config",
                "state",
                "port"
              ]
            },
            "examples": {
              "application/json": {
                "name": "tomatoes",
                "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                "idx": 0,
                "config": {
                  "mode": "AUTO",
                  "startAt": "0 5 * * *",
                  "duration": 60
                },
                "state": "OFF",
                "port": {
                  "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                  "portIdx": 0
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameters",
            "schema": {
              "$ref": "#/paths/~1rtc/put/responses/400/schema"
            }
          }
        },
        "deprecated": false
      }
    },
    "/sectors/{sectorId}": {
      "get": {
        "tags": [
          "sectors"
        ],
        "summary": "One sector of a specific cluster of a specific system",
        "description": "Get one Sector",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sectorId",
            "description": "The unique ID of the sector to retrieve",
            "type": "string",
            "required": true,
            "x-example": "2a1152ee-4d77-4ff4-a811-598555937625"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/paths/~1sectors/post/responses/200/schema"
            },
            "examples": {
              "application/json": {
                "name": "tomatoes",
                "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                "idx": 0,
                "config": {
                  "mode": "AUTO",
                  "startAt": "0 5 * * *",
                  "duration": 60
                },
                "state": "OFF",
                "port": {
                  "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                  "portIdx": 0
                }
              }
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "sectors"
        ],
        "summary": "Update a Sector",
        "description": "Update a Sector",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "sectorId",
            "description": "The unique ID of the sector to update",
            "type": "string",
            "required": true,
            "x-example": "2a1152ee-4d77-4ff4-a811-598555937625"
          },
          {
            "in": "body",
            "name": "sectors",
            "description": "The sector object to update",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1sectors/post/parameters/0/schema"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/paths/~1sectors/post/responses/200/schema"
            },
            "examples": {
              "application/json": {
                "name": "tomatoes",
                "clusterId": "79e914da-5103-4651-abb1-70214d2270a7",
                "idx": 0,
                "config": {
                  "mode": "AUTO",
                  "startAt": "0 5 * * *",
                  "duration": 60
                },
                "state": "OFF",
                "port": {
                  "deviceId": "53181aca-1dad-4cc0-86b6-eaf59dd01989",
                  "portIdx": 0
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid parameters",
            "schema": {
              "$ref": "#/paths/~1rtc/put/responses/400/schema"
            }
          }
        },
        "deprecated": false
      }
    },
    "/api-docs/": {
      "get": {
        "tags": [
          "swagger"
        ],
        "summary": "Responses the files from the directory defined by the contentPath property",
        "x-static": {
          "contentPath": "./docs/",
          "config": {
            "dotfiles": "allow",
            "index": true
          }
        },
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "deprecated": false
      }
    }
  }
}
